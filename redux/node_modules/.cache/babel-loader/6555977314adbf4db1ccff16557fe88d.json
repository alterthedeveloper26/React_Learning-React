{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  show: true\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialCounterState,\n  reducers: {\n    increase(state) {\n      state.counter++;\n    },\n\n    decrease(state) {\n      state.counter--;\n    },\n\n    increase5(state, action) {\n      state.counter += action.payload;\n    },\n\n    toggle(state) {\n      state.show = !state.show;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  } //   reducer: counterSlice.reducer,\n\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/redux/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","show","counterSlice","name","reducers","increase","state","decrease","increase5","action","payload","toggle","initialAuthState","isAuthenticated","authSlice","initialState","login","logout","store","reducer","auth","counterActions","actions","authActions"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,CADiB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAA5B;AAKA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BJ,EAAAA,mBAF+B;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACN,OAAN;AACD,KAHO;;AAIRO,IAAAA,QAAQ,CAACD,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACN,OAAN;AACD,KANO;;AAORQ,IAAAA,SAAS,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACvBH,MAAAA,KAAK,CAACN,OAAN,IAAiBS,MAAM,CAACC,OAAxB;AACD,KATO;;AAURC,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACL,IAAN,GAAa,CAACK,KAAK,CAACL,IAApB;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMW,gBAAgB,GAAG;AACvBC,EAAAA,eAAe,EAAE;AADM,CAAzB;AAIA,MAAMC,SAAS,GAAGjB,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,gBADsB;AAE5BY,EAAAA,YAAY,EAAEH,gBAFc;AAG5BR,EAAAA,QAAQ,EAAE;AACRY,IAAAA,KAAK,CAACV,KAAD,EAAQ;AACXA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACD,KAHO;;AAIRI,IAAAA,MAAM,CAACX,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AACD;;AANO;AAHkB,CAAD,CAA7B;AAaA,MAAMK,KAAK,GAAGpB,cAAc,CAAC;AAC3BqB,EAAAA,OAAO,EAAE;AACPnB,IAAAA,OAAO,EAAEE,YAAY,CAACiB,OADf;AAEPC,IAAAA,IAAI,EAAEN,SAAS,CAACK;AAFT,GADkB,CAK3B;;AAL2B,CAAD,CAA5B;AAQA,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAApC;AACP,OAAO,MAAMC,WAAW,GAAGT,SAAS,CAACQ,OAA9B;AACP,eAAeJ,KAAf","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = {\n  counter: 0,\n  show: true,\n};\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialCounterState,\n  reducers: {\n    increase(state) {\n      state.counter++;\n    },\n    decrease(state) {\n      state.counter--;\n    },\n    increase5(state, action) {\n      state.counter += action.payload;\n    },\n    toggle(state) {\n      state.show = !state.show;\n    },\n  },\n});\n\nconst initialAuthState = {\n  isAuthenticated: false,\n};\n\nconst authSlice = createSlice({\n  name: \"authentication\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    },\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer,\n  },\n  //   reducer: counterSlice.reducer,\n});\n\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;\n"]},"metadata":{},"sourceType":"module"}