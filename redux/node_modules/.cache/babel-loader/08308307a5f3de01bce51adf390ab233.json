{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  show: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increase() {},\n\n    decrease() {},\n\n    toggle() {}\n\n  }\n});\n\nconst counterReducer = (state = initial, action) => {\n  if (action.type === \"increase\") {\n    return { ...state,\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === \"decrease\") {\n    return { ...state,\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return { ...state,\n      show: !state.show\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","show","name","reducers","increase","decrease","toggle","counterReducer","state","initial","action","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAFU;AAGVI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,GAAG,CAAE,CADL;;AAERC,IAAAA,QAAQ,GAAG,CAAE,CAFL;;AAGRC,IAAAA,MAAM,GAAG,CAAE;;AAHH;AAHA,CAAD,CAAX;;AAUA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGC,OAAT,EAAkBC,MAAlB,KAA6B;AAClD,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO,EACL,GAAGH,KADE;AAELR,MAAAA,OAAO,EAAEQ,KAAK,CAACR,OAAN,GAAgB;AAFpB,KAAP;AAID;;AAED,MAAIU,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO,EACL,GAAGH,KADE;AAELR,MAAAA,OAAO,EAAEQ,KAAK,CAACR,OAAN,GAAgB;AAFpB,KAAP;AAID;;AAED,MAAIU,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO,EACL,GAAGH,KADE;AAELP,MAAAA,IAAI,EAAE,CAACO,KAAK,CAACP;AAFR,KAAP;AAID;;AAED,SAAOO,KAAP;AACD,CAvBD;;AAyBA,MAAMI,KAAK,GAAGf,WAAW,CAACU,cAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  counter: 0,\n  show: true,\n};\n\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increase() {},\n    decrease() {},\n    toggle() {},\n  },\n});\n\nconst counterReducer = (state = initial, action) => {\n  if (action.type === \"increase\") {\n    return {\n      ...state,\n      counter: state.counter + 1,\n    };\n  }\n\n  if (action.type === \"decrease\") {\n    return {\n      ...state,\n      counter: state.counter - 1,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      ...state,\n      show: !state.show,\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}