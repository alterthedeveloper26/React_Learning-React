{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/Food-order/src/components/Layout/HeaderCartButton.js\",\n    _s = $RefreshSig$();\n\nimport CartIcon from \"../Cart/CartIcon\";\nimport styles from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderCartButton = props => {\n  _s();\n\n  const [btnIsHL, setBtnHL] = useState(false);\n  const ctx = useContext(CartContext);\n  const {\n    items\n  } = ctx;\n  const numberOfCartItems = items.reduce((finalNumber, item) => {\n    return finalNumber + item.amount;\n  }, 0);\n  const btnClasses = `${styles.button} ${btnIsHL ? styles.bump : \"\"} `;\n  useEffect(() => {\n    if (ctx.items.length === 0) {\n      return;\n    } //to create bump\n\n\n    setBtnHL(true); //to clear the style for the next add, to create bump\n    //300 is the time when the animation finish\n\n    const timer = setTimeout(() => {\n      setBtnHL(false);\n    }, 300); //to ensure that when multiple clicking happen, the cart\n    //icon will only blink once\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [ctx.items]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: btnClasses,\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.icon,\n      children: /*#__PURE__*/_jsxDEV(CartIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.badge,\n      children: numberOfCartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderCartButton, \"0NBhGpCn62fbOmJfa8/JRx9yF9Q=\");\n\n_c = HeaderCartButton;\nexport default HeaderCartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderCartButton\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/Food-order/src/components/Layout/HeaderCartButton.js"],"names":["CartIcon","styles","CartContext","useContext","useEffect","useState","HeaderCartButton","props","btnIsHL","setBtnHL","ctx","items","numberOfCartItems","reduce","finalNumber","item","amount","btnClasses","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAClC,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMK,GAAG,GAAGP,UAAU,CAACD,WAAD,CAAtB;AACA,QAAM;AAAES,IAAAA;AAAF,MAAYD,GAAlB;AAEA,QAAME,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACC,WAAD,EAAcC,IAAd,KAAuB;AAC5D,WAAOD,WAAW,GAAGC,IAAI,CAACC,MAA1B;AACD,GAFyB,EAEvB,CAFuB,CAA1B;AAIA,QAAMC,UAAU,GAAI,GAAEhB,MAAM,CAACiB,MAAO,IAAGV,OAAO,GAAGP,MAAM,CAACkB,IAAV,GAAiB,EAAG,GAAlE;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAG,CAACC,KAAJ,CAAUS,MAAV,KAAqB,CAAzB,EAA4B;AAC1B;AACD,KAHa,CAId;;;AACAX,IAAAA,QAAQ,CAAC,IAAD,CAAR,CALc,CAOd;AACA;;AACA,UAAMY,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7Bb,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,KAFuB,EAErB,GAFqB,CAAxB,CATc,CAad;AACA;;AACA,WAAO,MAAM;AACXc,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACD,KAFD;AAGD,GAlBQ,EAkBN,CAACX,GAAG,CAACC,KAAL,CAlBM,CAAT;AAoBA,sBACE;AAAQ,IAAA,SAAS,EAAEM,UAAnB;AAA+B,IAAA,OAAO,EAAEV,KAAK,CAACiB,OAA9C;AAAA,4BACE;AAAM,MAAA,SAAS,EAAEvB,MAAM,CAACwB,IAAxB;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAExB,MAAM,CAACyB,KAAxB;AAAA,gBAAgCd;AAAhC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxCD;;GAAMN,gB;;KAAAA,gB;AA0CN,eAAeA,gBAAf","sourcesContent":["import CartIcon from \"../Cart/CartIcon\";\nimport styles from \"./HeaderCartButton.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport { useContext, useEffect, useState } from \"react\";\n\nconst HeaderCartButton = (props) => {\n  const [btnIsHL, setBtnHL] = useState(false);\n  const ctx = useContext(CartContext);\n  const { items } = ctx;\n\n  const numberOfCartItems = items.reduce((finalNumber, item) => {\n    return finalNumber + item.amount;\n  }, 0);\n\n  const btnClasses = `${styles.button} ${btnIsHL ? styles.bump : \"\"} `;\n\n  useEffect(() => {\n    if (ctx.items.length === 0) {\n      return;\n    }\n    //to create bump\n    setBtnHL(true);\n\n    //to clear the style for the next add, to create bump\n    //300 is the time when the animation finish\n    const timer = setTimeout(() => {\n      setBtnHL(false);\n    }, 300);\n\n    //to ensure that when multiple clicking happen, the cart\n    //icon will only blink once\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [ctx.items]);\n\n  return (\n    <button className={btnClasses} onClick={props.onClick}>\n      <span className={styles.icon}>\n        <CartIcon />\n      </span>\n      <span>Your Cart</span>\n      <span className={styles.badge}>{numberOfCartItems}</span>\n    </button>\n  );\n};\n\nexport default HeaderCartButton;\n"]},"metadata":{},"sourceType":"module"}