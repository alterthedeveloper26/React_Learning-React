{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/Food-order/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateItems = state.items.concat(action.item); //it return a new array, ref and primitive\n\n    const updateTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existIndex = state.items.findIndex(item => item.id === action.item.id);\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  const addToCartHandler = item => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemHandler = id => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addToCartHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"ZY2kzjH0eT2UJ8xdytMWU1wIqqA=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/Food-order/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","updateItems","concat","item","updateTotalAmount","price","amount","existIndex","findIndex","id","CartProvider","props","cartState","dispatchCart","addToCartHandler","removeItemHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,WAAW,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB,CADyB,CAC4B;;AACrD,UAAMC,iBAAiB,GACrBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;AAGA,UAAMC,UAAU,GAAGT,KAAK,CAACH,KAAN,CAAYa,SAAZ,CAChBL,IAAD,IAAUA,IAAI,CAACM,EAAL,KAAYV,MAAM,CAACI,IAAP,CAAYM,EADjB,CAAnB;AAIA,WAAO;AACLd,MAAAA,KAAK,EAAEM,WADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AAED,SAAOV,gBAAP;AACD,CAjBD;;AAmBA,MAAMgB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAA5C;;AAEA,QAAMoB,gBAAgB,GAAIX,IAAD,IAAU;AACjCU,IAAAA,YAAY,CAAC;AACXb,MAAAA,IAAI,EAAE,KADK;AAEXG,MAAAA,IAAI,EAAEA;AAFK,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMY,iBAAiB,GAAIN,EAAD,IAAQ;AAChCI,IAAAA,YAAY,CAAC;AACXb,MAAAA,IAAI,EAAE,QADK;AAEXS,MAAAA,EAAE,EAAEA;AAFO,KAAD,CAAZ;AAID,GALD;;AAOA,QAAMO,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADC;AAElBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFL;AAGlBqB,IAAAA,OAAO,EAAEH,gBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BD;;GAAMT,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updateItems = state.items.concat(action.item); //it return a new array, ref and primitive\n    const updateTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    return {\n      items: updateItems,\n      totalAmount: updateTotalAmount,\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCartState);\n\n  const addToCartHandler = (item) => {\n    dispatchCart({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemHandler = (id) => {\n    dispatchCart({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addToCartHandler,\n    removeItem: removeItemHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}