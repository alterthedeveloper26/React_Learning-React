{"ast":null,"code":"import { uiActions } from \"./ui.store\";\nimport { cartActions } from \"./cart.store\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://learn-react-38602-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Can not fetch data!!!\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!!!\",\n        message: \"Fetching cart data fail!\"\n      }));\n    }\n  };\n}; //This is an action creator\n\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://learn-react-38602-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!!!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sending cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!!!\",\n        message: \"Sending cart data fail!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/advanced-redux/src/store/cart.action.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACD,KAZD;;AAcA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACF,WAAW,CAACW,WAAZ,CAAwBD,QAAxB,CAAD,CAAR;AACD,KAHD,CAGE,OAAOE,KAAP,EAAc;AACdV,MAAAA,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA3BD;AA4BD,CA7BM,C,CA+BP;;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOhB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMf,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,EAE1B;AACEe,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACd,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;AACF,KAZD;;AAcA,QAAI;AACF,YAAMY,WAAW,EAAjB;AAEAjB,MAAAA,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KAVD,CAUE,OAAOJ,KAAP,EAAc;AACdV,MAAAA,QAAQ,CACNH,SAAS,CAACc,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA1CD;AA2CD,CA5CM","sourcesContent":["import { uiActions } from \"./ui.store\";\nimport { cartActions } from \"./cart.store\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://learn-react-38602-default-rtdb.firebaseio.com/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Can not fetch data!!!\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!!!\",\n          message: \"Fetching cart data fail!\",\n        })\n      );\n    }\n  };\n};\n\n//This is an action creator\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://learn-react-38602-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!!!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sending cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!!!\",\n          message: \"Sending cart data fail!\",\n        })\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}