{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui.store\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice += existingItem.price;\n      } else {\n        state.items.push({ ...newItem,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      }\n    },\n\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (!existingItem) {\n        console.log(\"item not exist, bug vcl!\");\n        return;\n      }\n\n      if (existingItem.quantity > 1) {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      } else {\n        state.items = state.items.filter(item => item.id !== id);\n      }\n    }\n\n  }\n});\n\nconst sendCartData = cartData => {\n  return dispatch => {\n    dispatch();\n  };\n};\n\nexport default cartSlice.reducer;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/advanced-redux/src/store/cart.store.js"],"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","quantity","totalPrice","price","push","removeFromCart","console","log","filter","sendCartData","cartData","dispatch","reducer","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE;AAFH,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAIO,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACI,QAAb;AACAJ,QAAAA,YAAY,CAACK,UAAb,IAA2BL,YAAY,CAACM,KAAxC;AACD,OAHD,MAGO;AACLV,QAAAA,KAAK,CAACJ,KAAN,CAAYe,IAAZ,CAAiB,EACf,GAAGT,OADY;AAEfM,UAAAA,QAAQ,EAAE,CAFK;AAGfC,UAAAA,UAAU,EAAEP,OAAO,CAACQ;AAHL,SAAjB;AAKD;AACF,KAfO;;AAgBRE,IAAAA,cAAc,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AAEA,UAAI,CAACO,YAAL,EAAmB;AACjBS,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA;AACD;;AAED,UAAIV,YAAY,CAACI,QAAb,GAAwB,CAA5B,EAA+B;AAC7BJ,QAAAA,YAAY,CAACI,QAAb;AACAJ,QAAAA,YAAY,CAACK,UAAb,IAA2BL,YAAY,CAACM,KAAxC;AACD,OAHD,MAGO;AACLV,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAoBT,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACD;AACF;;AAhCO;AANkB,CAAD,CAA7B;;AA0CA,MAAMS,YAAY,GAAIC,QAAD,IAAc;AACjC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ;AACT,GAFD;AAGD,CAJD;;AAMA,eAAezB,SAAS,CAAC0B,OAAzB;AACA,OAAO,MAAMC,WAAW,GAAG3B,SAAS,CAAC4B,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui.store\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (existingItem) {\n        existingItem.quantity++;\n        existingItem.totalPrice += existingItem.price;\n      } else {\n        state.items.push({\n          ...newItem,\n          quantity: 1,\n          totalPrice: newItem.price,\n        });\n      }\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n\n      if (!existingItem) {\n        console.log(\"item not exist, bug vcl!\");\n        return;\n      }\n\n      if (existingItem.quantity > 1) {\n        existingItem.quantity--;\n        existingItem.totalPrice -= existingItem.price;\n      } else {\n        state.items = state.items.filter((item) => item.id !== id);\n      }\n    },\n  },\n});\n\nconst sendCartData = (cartData) => {\n  return (dispatch) => {\n    dispatch();\n  };\n};\n\nexport default cartSlice.reducer;\nexport const cartActions = cartSlice.actions;\n"]},"metadata":{},"sourceType":"module"}