{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/authentication/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const userIsLoggin = !!token; //turn something into false or tru\n\n  const loginHandler = token => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logoutHandler = () => {\n    console.log(\"Run log out!\");\n    setToken(null);\n  };\n\n  const contextValue = {\n    token,\n    isLoggedIn: userIsLoggin,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/authentication/01-starting-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","setToken","userIsLoggin","loginHandler","localStorage","setItem","logoutHandler","console","log","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE,EADsC;AAE7CC,EAAAA,UAAU,EAAE,KAFiC;AAG7CC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHyB;AAI7CG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJ6B,CAApB,CAApB;AAOP,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMU,YAAY,GAAG,CAAC,CAACP,KAAvB,CAH4C,CAGd;;AAE9B,QAAMQ,YAAY,GAAIR,KAAD,IAAW;AAC9BM,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,KAA9B;AACD,GAHD;;AAKA,QAAMW,aAAa,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAP,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAHD;;AAKA,QAAMQ,YAAY,GAAG;AACnBd,IAAAA,KADmB;AAEnBC,IAAAA,UAAU,EAAEM,YAFO;AAGnBL,IAAAA,KAAK,EAAEM,YAHY;AAInBL,IAAAA,MAAM,EAAEQ;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,YAA7B;AAAA,cACGT,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BM;;GAAMX,mB;;KAAAA,mB","sourcesContent":["import React, { useState } from \"react\";\n\nexport const AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [token, setToken] = useState(null);\n\n  const userIsLoggin = !!token; //turn something into false or tru\n\n  const loginHandler = (token) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logoutHandler = () => {\n    console.log(\"Run log out!\");\n    setToken(null);\n  };\n\n  const contextValue = {\n    token,\n    isLoggedIn: userIsLoggin,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}