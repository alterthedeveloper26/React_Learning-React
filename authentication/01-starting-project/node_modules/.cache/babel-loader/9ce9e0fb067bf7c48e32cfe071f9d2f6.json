{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/authentication/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingDuration = expTime => {\n  const currentTime = new Date().getTime();\n  const adjExpTime = new Date(expTime).getTime();\n  return adjExpTime - currentTime;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpiration = localStorage.getItem(\"expTime\");\n  const remainingTime = calculateRemainingDuration(storedExpiration);\n\n  if (remainingTime < 60000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime\n  };\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggin = !!token; //turn something into false or tru\n\n  useEffect(() => {\n    if (tokenData) {\n      const logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData]);\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const loginHandler = (token, expTime) => {\n    localStorage.setItem(\"expTime\", expTime);\n    localStorage.setItem(\"token\", token);\n    setToken(token);\n  };\n\n  const contextValue = {\n    token,\n    isLoggedIn: userIsLoggin,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/authentication/01-starting-project/src/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingDuration","expTime","currentTime","Date","getTime","adjExpTime","retrieveStoredToken","storedToken","localStorage","getItem","storedExpiration","remainingTime","removeItem","duration","AuthContextProvider","props","tokenData","initialToken","setToken","userIsLoggin","logoutTimer","setTimeout","logoutHandler","loginHandler","setItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AAC7CC,EAAAA,KAAK,EAAE,EADsC;AAE7CC,EAAAA,UAAU,EAAE,KAFiC;AAG7CC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHyB;AAI7CG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJ6B,CAApB,CAApB;;AAOP,MAAMC,0BAA0B,GAAIC,OAAD,IAAa;AAC9C,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,UAAU,GAAG,IAAIF,IAAJ,CAASF,OAAT,EAAkBG,OAAlB,EAAnB;AACA,SAAOC,UAAU,GAAGH,WAApB;AACD,CAJD;;AAMA,MAAMI,mBAAmB,GAAG,MAAM;AAChC,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,QAAMC,gBAAgB,GAAGF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAzB;AAEA,QAAME,aAAa,GAAGX,0BAA0B,CAACU,gBAAD,CAAhD;;AAEA,MAAIC,aAAa,GAAG,KAApB,EAA2B;AACzBH,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACAJ,IAAAA,YAAY,CAACI,UAAb,CAAwB,SAAxB;AACA,WAAO,IAAP;AACD;;AAED,SAAO;AACLhB,IAAAA,KAAK,EAAEW,WADF;AAELM,IAAAA,QAAQ,EAAEF;AAFL,GAAP;AAID,CAhBD;;AAkBA,OAAO,MAAMG,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,SAAS,GAAGV,mBAAmB,EAArC;AACA,MAAIW,YAAJ;;AAEA,MAAID,SAAJ,EAAe;AACbC,IAAAA,YAAY,GAAGD,SAAS,CAACpB,KAAzB;AACD;;AAED,QAAM,CAACA,KAAD,EAAQsB,QAAR,IAAoB1B,QAAQ,CAACyB,YAAD,CAAlC;AAEA,QAAME,YAAY,GAAG,CAAC,CAACvB,KAAvB,CAV4C,CAUd;;AAE9BH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuB,SAAJ,EAAe;AACb,YAAMI,WAAW,GAAGC,UAAU,CAACC,aAAD,EAAgBN,SAAS,CAACH,QAA1B,CAA9B;AACD;AACF,GAJQ,EAIN,CAACG,SAAD,CAJM,CAAT;;AAMA,QAAMM,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAV,IAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACD,GAHD;;AAKA,QAAMW,YAAY,GAAG,CAAC3B,KAAD,EAAQK,OAAR,KAAoB;AACvCO,IAAAA,YAAY,CAACgB,OAAb,CAAqB,SAArB,EAAgCvB,OAAhC;AACAO,IAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8B5B,KAA9B;AACAsB,IAAAA,QAAQ,CAACtB,KAAD,CAAR;AACD,GAJD;;AAMA,QAAM6B,YAAY,GAAG;AACnB7B,IAAAA,KADmB;AAEnBC,IAAAA,UAAU,EAAEsB,YAFO;AAGnBrB,IAAAA,KAAK,EAAEyB,YAHY;AAInBxB,IAAAA,MAAM,EAAEuB;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEG,YAA7B;AAAA,cACGV,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzCM;;GAAMZ,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingDuration = (expTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpTime = new Date(expTime).getTime();\n  return adjExpTime - currentTime;\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpiration = localStorage.getItem(\"expTime\");\n\n  const remainingTime = calculateRemainingDuration(storedExpiration);\n\n  if (remainingTime < 60000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expTime\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggin = !!token; //turn something into false or tru\n\n  useEffect(() => {\n    if (tokenData) {\n      const logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData]);\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const loginHandler = (token, expTime) => {\n    localStorage.setItem(\"expTime\", expTime);\n    localStorage.setItem(\"token\", token);\n    setToken(token);\n  };\n\n  const contextValue = {\n    token,\n    isLoggedIn: userIsLoggin,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}