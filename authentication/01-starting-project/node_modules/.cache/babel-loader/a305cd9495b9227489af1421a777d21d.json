{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/authentication/01-starting-project/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from \"react\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./AuthForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const authContext = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    setLoading(true);\n    let url = \"\";\n\n    if (isLogin) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAwPlQRL4yVtmkp4amArDH4y3mw8wPfaPE\";\n    } else {\n      //in sign up\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAwPlQRL4yVtmkp4amArDH4y3mw8wPfaPE\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setLoading(false);\n\n      if (res.ok) {\n        return res.json();\n      } else {\n        return res.json().then(data => {\n          let errorMessage = \"Authentication failed!\"; // if (data && data.error && data.error.message) {\n          //   errorMessage = data.error.message;\n          // }\n\n          throw new Error(errorMessage);\n        });\n      }\n    }).then(data => {\n      authContext.login(data.idToken);\n      history.replace(\"/\");\n    }).catch(err => alert(err.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading ? /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending a fuckin request!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"85mdaqxg6XwKyjkvAZgBU4EQDXY=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/authentication/01-starting-project/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","AuthContext","useHistory","classes","AuthForm","isLogin","setIsLogin","isLoading","setLoading","history","emailInputRef","passwordInputRef","authContext","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","url","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","errorMessage","Error","login","idToken","replace","catch","err","alert","message","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from \"react\";\nimport { AuthContext } from \"../../store/auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nimport classes from \"./AuthForm.module.css\";\n\nconst AuthForm = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authContext = useContext(AuthContext);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    setLoading(true);\n    let url = \"\";\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAwPlQRL4yVtmkp4amArDH4y3mw8wPfaPE\";\n    } else {\n      //in sign up\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAwPlQRL4yVtmkp4amArDH4y3mw8wPfaPE\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            // if (data && data.error && data.error.message) {\n            //   errorMessage = data.error.message;\n            // }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        authContext.login(data.idToken);\n        history.replace(\"/\");\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          {!isLoading ? (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          ) : (\n            <p>Sending a fuckin request!!!</p>\n          )}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}