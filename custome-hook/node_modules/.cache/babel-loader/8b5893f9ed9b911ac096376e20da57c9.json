{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/custome-hook/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const addTask = (taskText, data) => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n    const createdTask = {\n      id: generatedId,\n      text: taskText\n    };\n    props.onAddTask(createdTask);\n  };\n\n  const {\n    isLoading,\n    error,\n    sendRequest: createTask\n  } = useHttp();\n\n  const enterTaskHandler = async taskText => {\n    createTask({\n      url: \"https://learn-react-38602-default-rtdb.firebaseio.com/movies.json\",\n      method: \"POST\",\n      body: JSON.stringify({\n        title: taskText\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }, addTask.bind(null, taskText));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"cFYrJ9qDortxJOZjlD4W6gQrcGk=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/custome-hook/src/components/NewTask/NewTask.js"],"names":["Section","TaskForm","useHttp","NewTask","props","addTask","taskText","data","generatedId","name","createdTask","id","text","onAddTask","isLoading","error","sendRequest","createTask","enterTaskHandler","url","method","body","JSON","stringify","title","headers","bind"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAClC,UAAMC,WAAW,GAAGD,IAAI,CAACE,IAAzB,CADkC,CACH;;AAC/B,UAAMC,WAAW,GAAG;AAAEC,MAAAA,EAAE,EAAEH,WAAN;AAAmBI,MAAAA,IAAI,EAAEN;AAAzB,KAApB;AAEAF,IAAAA,KAAK,CAACS,SAAN,CAAgBH,WAAhB;AACD,GALD;;AAOA,QAAM;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAAW,EAAEC;AAAjC,MAAgDf,OAAO,EAA7D;;AAEA,QAAMgB,gBAAgB,GAAG,MAAOZ,QAAP,IAAoB;AAC3CW,IAAAA,UAAU,CACR;AACEE,MAAAA,GAAG,EAAE,mEADP;AAEEC,MAAAA,MAAM,EAAE,MAFV;AAGEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAElB;AAAT,OAAf,CAHR;AAIEmB,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAJX,KADQ,EASRpB,OAAO,CAACqB,IAAR,CAAa,IAAb,EAAmBpB,QAAnB,CATQ,CAAV;AAWD,GAZD;;AAcA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEY,gBAAvB;AAAyC,MAAA,OAAO,EAAEJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9BD;;GAAMZ,O;UAQkDD,O;;;KARlDC,O;AAgCN,eAAeA,OAAf","sourcesContent":["import Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const addTask = (taskText, data) => {\n    const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const { isLoading, error, sendRequest: createTask } = useHttp();\n\n  const enterTaskHandler = async (taskText) => {\n    createTask(\n      {\n        url: \"https://learn-react-38602-default-rtdb.firebaseio.com/movies.json\",\n        method: \"POST\",\n        body: JSON.stringify({ title: taskText }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      },\n      addTask.bind(null, taskText)\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}