{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/custome-hook/src/components/NewTask/NewTask.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTask = props => {\n  _s();\n\n  const {} = useHttp({\n    url: \"https://learn-react-38602-default-rtdb.firebaseio.com/movies.json\",\n    method: \"POST\",\n    body: JSON.stringify({\n      title: taskText\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  const enterTaskHandler = async taskText => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\"https://learn-react-38602-default-rtdb.firebaseio.com/movies.json\", {\n        url: \"https://learn-react-38602-default-rtdb.firebaseio.com/movies.json\",\n        method: \"POST\",\n        body: JSON.stringify({\n          title: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewTask, \"hzMafAK46PPmstJ9GLQDvZ25RZU=\", false, function () {\n  return [useHttp];\n});\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/custome-hook/src/components/NewTask/NewTask.js"],"names":["useState","Section","TaskForm","useHttp","NewTask","props","url","method","body","JSON","stringify","title","taskText","headers","enterTaskHandler","setIsLoading","setError","response","fetch","ok","Error","data","json","generatedId","name","createdTask","id","text","onAddTask","err","message","isLoading","error"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,KAAKF,OAAO,CAAC;AACjBG,IAAAA,GAAG,EAAE,mEADY;AAEjBC,IAAAA,MAAM,EAAE,MAFS;AAGjBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,KAAK,EAAEC;AAAT,KAAf,CAHW;AAIjBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAJQ,GAAD,CAAlB;;AASA,QAAMC,gBAAgB,GAAG,MAAOF,QAAP,IAAoB;AAC3CG,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEAD0B,EAE1B;AACEZ,QAAAA,GAAG,EAAE,mEADP;AAEEC,QAAAA,MAAM,EAAE,MAFV;AAGEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,KAAK,EAAEC;AAAT,SAAf,CAHR;AAIEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAJX,OAF0B,CAA5B;;AAYA,UAAI,CAACI,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,YAAMC,WAAW,GAAGF,IAAI,CAACG,IAAzB,CAnBE,CAmB6B;;AAC/B,YAAMC,WAAW,GAAG;AAAEC,QAAAA,EAAE,EAAEH,WAAN;AAAmBI,QAAAA,IAAI,EAAEf;AAAzB,OAApB;AAEAP,MAAAA,KAAK,CAACuB,SAAN,CAAgBH,WAAhB;AACD,KAvBD,CAuBE,OAAOI,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAACa,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDf,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GA9BD;;AAgCA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,WAAW,EAAED,gBAAvB;AAAyC,MAAA,OAAO,EAAEiB;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGC,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhDD;;GAAM5B,O;UACOD,O;;;KADPC,O;AAkDN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n  const {} = useHttp({\n    url: \"https://learn-react-38602-default-rtdb.firebaseio.com/movies.json\",\n    method: \"POST\",\n    body: JSON.stringify({ title: taskText }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const enterTaskHandler = async (taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\n        \"https://learn-react-38602-default-rtdb.firebaseio.com/movies.json\",\n        {\n          url: \"https://learn-react-38602-default-rtdb.firebaseio.com/movies.json\",\n          method: \"POST\",\n          body: JSON.stringify({ title: taskText }),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = { id: generatedId, text: taskText };\n\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}