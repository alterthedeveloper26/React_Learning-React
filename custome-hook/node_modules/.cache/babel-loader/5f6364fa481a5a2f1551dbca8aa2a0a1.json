{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useHttp = requestConfig => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (taskText, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/custome-hook/src/hooks/use-http.js"],"names":["useState","useHttp","requestConfig","isLoading","setIsLoading","error","setError","sendRequest","taskText","applyData","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAIC,aAAD,IAAmB;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMO,WAAW,GAAG,OAAOC,QAAP,EAAiBC,SAAjB,KAA+B;AACjDL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACT,aAAa,CAACU,GAAf,EAAoB;AAC9CC,QAAAA,MAAM,EAAEX,aAAa,CAACW,MAAd,GAAuBX,aAAa,CAACW,MAArC,GAA8C,KADR;AAE9CC,QAAAA,OAAO,EAAEZ,aAAa,CAACY,OAAd,GAAwBZ,aAAa,CAACY,OAAtC,GAAgD,EAFX;AAG9CC,QAAAA,IAAI,EAAEb,aAAa,CAACa,IAAd,GAAqBC,IAAI,CAACC,SAAL,CAAef,aAAa,CAACa,IAA7B,CAArB,GAA0D;AAHlB,OAApB,CAA5B;;AAMA,UAAI,CAACL,QAAQ,CAACQ,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAnB;AACAZ,MAAAA,SAAS,CAACW,IAAD,CAAT;AACD,KAbD,CAaE,OAAOE,GAAP,EAAY;AACZhB,MAAAA,QAAQ,CAACgB,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDnB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GApBD;;AAsBA,SAAO;AACLD,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CA/BD;;GAAMN,O;;AAiCN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useHttp = (requestConfig) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = async (taskText, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}