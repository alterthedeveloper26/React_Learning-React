{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(requestConfig.url); //   {\n      //     method: requestConfig.method ? requestConfig.method : \"GET\",\n      //     headers: requestConfig.headers ? requestConfig.headers : {},\n      //     body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      //   }\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      console.log(\"Data here: \", data);\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n\n    setIsLoading(false);\n  }, []);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\n\nexport default useHttp;","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/custome-hook/src/hooks/use-http.js"],"names":["useState","useCallback","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","response","fetch","url","ok","Error","data","json","console","log","err","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMO,WAAW,GAAGN,WAAW,CAAC,OAAOO,aAAP,EAAsBC,SAAtB,KAAoC;AAClEL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAf,CAA5B,CADE,CAEF;AACA;AACA;AACA;AACA;;AAEA,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,IAA3B;AACAN,MAAAA,SAAS,CAACM,IAAD,CAAT;AACD,KAfD,CAeE,OAAOI,GAAP,EAAY;AACZb,MAAAA,QAAQ,CAACa,GAAG,CAACC,OAAJ,IAAe,uBAAhB,CAAR;AACD;;AACDhB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAtB8B,EAsB5B,EAtB4B,CAA/B;AAwBA,SAAO;AACLD,IAAAA,SADK;AAELE,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CAjCD;;GAAML,O;;AAmCN,eAAeA,OAAf","sourcesContent":["import { useState, useCallback } from \"react\";\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url);\n      //   {\n      //     method: requestConfig.method ? requestConfig.method : \"GET\",\n      //     headers: requestConfig.headers ? requestConfig.headers : {},\n      //     body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      //   }\n\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n\n      const data = await response.json();\n      console.log(\"Data here: \", data);\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, []);\n\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n"]},"metadata":{},"sourceType":"module"}