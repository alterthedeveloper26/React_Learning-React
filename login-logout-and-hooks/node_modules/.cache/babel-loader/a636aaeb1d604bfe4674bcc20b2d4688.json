{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/side-effect/src/components/Login/Login.reducer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action && action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action && action.type === \"INPUT_BLUR\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst LoginReducer = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false); //Email state is the lastest state of the email\n  //Dispatch an /action/ that is usually an object\n  //Reducer(func, initial state)\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: true\n  }); //return will create a function that run in the next time of the use effect\n  //this mean, the last setTimeout won't be clear, since the \"CLEAN UP\" function\n  //won't have the \"next time\"\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"VALIDATION!!!\");\n      setFormIsValid(emailState.isValid && enteredPassword.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log(\"CLEAN UP FUNCTION\");\n      clearTimeout(identifier);\n    };\n  }, [emailState, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginReducer, \"aEe2DiAWlXlf3MM2fcoCRzgrjg0=\");\n\n_c = LoginReducer;\nexport default LoginReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginReducer\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/side-effect/src/components/Login/Login.reducer.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","LoginReducer","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","identifier","setTimeout","console","log","trim","length","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if (action && action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n\n  if (action && action.type === \"INPUT_BLUR\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst LoginReducer = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  //Email state is the lastest state of the email\n  //Dispatch an /action/ that is usually an object\n  //Reducer(func, initial state)\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: true,\n  });\n\n  //return will create a function that run in the next time of the use effect\n  //this mean, the last setTimeout won't be clear, since the \"CLEAN UP\" function\n  //won't have the \"next time\"\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"VALIDATION!!!\");\n      setFormIsValid(emailState.isValid && enteredPassword.trim().length > 6);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEAN UP FUNCTION\");\n      clearTimeout(identifier);\n    };\n  }, [emailState, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value,\n    });\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default LoginReducer;\n"]},"metadata":{},"sourceType":"module"}