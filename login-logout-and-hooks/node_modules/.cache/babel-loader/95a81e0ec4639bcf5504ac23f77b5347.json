{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/side-effect/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import Login from \"./components/Login/Login\";\n\nimport LoginReducer from \"./components/Login/Login.reducer\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const loginState = localStorage.getItem(\"isLoggedIn\");\n\n    if (loginState === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n        isAuthenticated: isLoggedIn,\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(LoginReducer, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 27\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/side-effect/src/App.js"],"names":["React","useEffect","useState","LoginReducer","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","loginState","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnB;;AAEA,QAAIF,UAAU,KAAK,GAAnB,EAAwB;AACtBD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMI,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxC;AACA;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GALD;;AAOA,QAAMQ,aAAa,GAAG,MAAM;AAC1BR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,eAAe,EAAED,UAA7B;AAAyC,QAAA,QAAQ,EAAES;AAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBACG,CAACT,UAAD,iBAAe,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEK;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADlB,EAEGL,UAAU,iBAAI,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAES;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAjCQV,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// import Login from \"./components/Login/Login\";\nimport LoginReducer from \"./components/Login/Login.reducer\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const loginState = localStorage.getItem(\"isLoggedIn\");\n\n    if (loginState === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <AuthContext.Provider>\n        <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n        <main>\n          {!isLoggedIn && <LoginReducer onLogin={loginHandler} />}\n          {isLoggedIn && <Home onLogout={logoutHandler} />}\n        </main>\n      </AuthContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}