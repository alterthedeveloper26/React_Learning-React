{"ast":null,"code":"var _jsxFileName = \"/home/baohoang0206/Local/source_code/react/side-effect/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false); //return will create a function that run in the next time of the use effect\n  //this mean, the last setTimeout won't be clear, since the \"CLEAN UP\" function\n  //won't have the \"next time\"\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"VALIDATION!!!\");\n      setFormIsValid(enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log(\"CLEAN UP FUNCTION\");\n      clearTimeout(identifier);\n    };\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const passwordInput = useRef();\n  const emailInput = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      props.onLogin(enteredEmail, enteredPassword);\n    } else if (!emailIsValid) {\n      emailInput.current.activate();\n    } else if (emailIsValid && !passwordIsValid) {\n      passwordInput.current.activate();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInput,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: enteredEmail,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInput,\n        id: \"password\",\n        label: \"password\",\n        type: \"password\",\n        value: enteredPassword,\n        isValid: passwordIsValid,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"TIsVkQhmX4RUaxg0uR4ZR/mH0e8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/baohoang0206/Local/source_code/react/side-effect/src/components/Login/Login.js"],"names":["React","useState","useEffect","useRef","Card","classes","Button","Input","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","identifier","setTimeout","console","log","includes","trim","length","clearTimeout","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","passwordInput","emailInput","submitHandler","preventDefault","onLogin","current","activate","login","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport Input from \"../UI/Input/Input\";\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  //return will create a function that run in the next time of the use effect\n  //this mean, the last setTimeout won't be clear, since the \"CLEAN UP\" function\n  //won't have the \"next time\"\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"VALIDATION!!!\");\n      setFormIsValid(\n        enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n      );\n    }, 500);\n\n    return () => {\n      console.log(\"CLEAN UP FUNCTION\");\n      clearTimeout(identifier);\n    };\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const passwordInput = useRef();\n  const emailInput = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      props.onLogin(enteredEmail, enteredPassword);\n    } else if (!emailIsValid) {\n      emailInput.current.activate();\n    } else if (emailIsValid && !passwordIsValid) {\n      passwordInput.current.activate();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          ref={emailInput}\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={enteredEmail}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={passwordInput}\n          id=\"password\"\n          label=\"password\"\n          type=\"password\"\n          value={enteredPassword}\n          isValid={passwordIsValid}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}